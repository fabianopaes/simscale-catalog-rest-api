FORMAT: 1A
HOST: http://docs.simscalecatalogrestapi.apiary.io/

# User's Catalog REST API

User's catalog rest api is a simple API developed for SimScale  test

## Users Collection [/v1/users]

Retrieve all users from database

### List All Users [GET]

+ Response 200 (application/json)

        [
            {
                "username": "username1",
                "firstName": "firstName1",
                "lastName": "lastName1",
            },
            {
                "username": "username2",
                "firstName": "firstName2",
                "lastName": "lastName2",
            },
            {
                "username": "username3",
                "firstName": "firstName3",
                "lastName": "lastName3",
            },
            {
                "username": "username4",
                "firstName": "firstName4",
                "lastName": "lastName4",
            }                                    
        ]

### Create a New User [POST]

You may create your own User using this action. It takes a JSON
object containing an user.

+ Request (application/json)

        {
            "username": "new-username",
            "firstName": "new-firstName",
            "lastName": "new-lastName"           
        }

+ Response 201 (application/json)

    + Headers

            Location: /v1/users/1

    + Body

            {
                "username": "new-username",
                "firstName": "new-firstName",
                "lastName": "new-lastName"
            }

## Users [/v1/users/{userId}]

### Retrieve an User [GET]

Retrieving all information about a single user.

+ Parameters

    + userId (number) ... user's identifier      

+ Response 200 (application/json)

    + Body

            {
                "username": "username",
                "firstName": "firstName",
                "lastName": "lastName"
            }

### Update an existing User [PUT]

+ Parameters

    + userId (number) ... user's identifier  


+ Request (application/json)

        {
            "username": "updated-username",
            "firstName": "updated-firstName",
            "lastName": "updated-lastName"           
        }

+ Response 201 (application/json)

    + Headers

            Location: /v1/users/1

    + Body

            {
                "username": "updated-username",
                "firstName": "updated-firstName",
                "lastName": "updated-lastName"
            } 

### Delete an existing User in the database [DELETE]

+ Parameters

    + userId (number) ... user's identifier        

+ Response 200